{"version":3,"sources":["webpack:///./node_modules/ngx-highlightjs/fesm5/ngx-highlightjs.js","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/source-display/source-display.component.html","webpack:///./src/app/shared/source-display/source-display.component.scss","webpack:///./src/app/shared/source-display/source-display.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAgI;AAChG;AACJ;;AAE5B;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,yHAAkE,gBAAgB,EAAE;AACpF,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,iEAAmB;AACxB;AACA;AACA,0CAA0C;AAC1C,KAAK,gCAAgC,+DAAiB,GAAG,+EAAiC,IAAI;AAC9F,EAAE;;AAEF;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,4CAA4C,UAAU;AACtD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qDAAqD,+CAA+C,EAAE;AACtG,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,qCAAqC,EAAE;AACxG,gDAAgD,iCAAiC;AACjF,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,4JAAwD,gFAAgF,EAAE,sFAA+B,0EAA0E,EAAE;AACrP;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA,aAAa,IAAI;AACjB;AACA;AACA,iDAAiD;AACjD,KAAK,kEAAoB;AACzB,KAAK,iEAAmB;AACxB,KAAK,qBAAqB;AAC1B,EAAE;AACF;AACA,mBAAmB,4DAAc;AACjC,kBAAkB,4DAAc;AAChC,iBAAiB,6EAA+B;AAChD,qBAAqB,6DAAe;AACpC;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iBAAiB,sCAAsC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;AC9VyC;AACM;AACG;AAEiC;AAcnF;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAZxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,+DAAe,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC;aAC3C;YACD,YAAY,EAAE;gBACZ,+FAAsB;aACvB;YACD,OAAO,EAAE;gBACP,+FAAsB;aACvB;SACF,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;AClBzB,kLAAkL,WAAW,2LAA2L,cAAc,sLAAsL,UAAU,m0B;;;;;;;;;;;ACAtkB,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AAEzD,IAAI,aAAa,GAAG,CAAC,CAAC;AACtB,IAAI,oBAAoB,GAAG,CAAC,CAAC;AAC7B,IAAI,iBAAiB,GAAG,CAAC,CAAC;AAC1B,IAAI,uBAAuB,GAAG,CAAC,CAAC;AAChC,IAAI,gBAAgB,GAAG,CAAC,CAAC;AAOzB;IAYE;QAVQ,UAAK,GAAG,wBAAsB,aAAa,EAAI,CAAC;QAChD,iBAAY,GAAG,gCAA8B,oBAAoB,EAAI,CAAC;QACtE,cAAS,GAAG,cAAY,iBAAiB,EAAI,CAAC;QAC9C,iBAAY,GAAG,oBAAkB,uBAAuB,EAAI,CAAC;QAC7D,aAAQ,GAAG,aAAW,gBAAgB,EAAI,CAAC;IAMnC,CAAC;IAEjB,yCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAE/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAE3D,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;IAfQ;QAAR,2DAAK,EAAE;;wDAAc;IACb;QAAR,2DAAK,EAAE;;8DAAoB;IACnB;QAAR,2DAAK,EAAE;;uDAAa;IAVV,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,sBAAsB,CAwBlC;IAAD,6BAAC;CAAA;AAxBkC","file":"src-app-checkbox-checkbox-module~src-app-toggle-toggle-module.js","sourcesContent":["import { InjectionToken, Injectable, Inject, Optional, Directive, ElementRef, Renderer2, Input, Output, EventEmitter, NgModule } from '@angular/core';\nimport { BehaviorSubject, from } from 'rxjs';\nimport { take, filter, map } from 'rxjs/operators';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar /** @type {?} */ OPTIONS = new InjectionToken('OPTIONS');\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar HighlightJS = /** @class */ (function () {\r\n    /**\r\n     * @param {?} options\r\n     */\r\n    function HighlightJS(options) {\r\n        this.options = {\r\n            theme: 'github',\r\n            path: 'assets/lib/hljs',\r\n            auto: true\r\n        };\r\n        this._isReady$ = new BehaviorSubject(false);\r\n        this.options = Object.assign({}, this.options, options);\r\n        if (typeof hljs !== 'undefined') {\r\n            /** hljs is loaded by the user */\r\n            hljs.configure(this.options.config);\r\n            this._isReady$.next(true);\r\n        }\r\n        else {\r\n            /** Load hljs script and style locally */\r\n            this._loadScript();\r\n            this._loadTheme();\r\n        }\r\n    }\r\n    Object.defineProperty(HighlightJS.prototype, \"isReady\", {\r\n        /**\r\n         * @return {?}\r\n         */\r\n        get: function () {\r\n            return this._isReady$.pipe(filter(function (isReady) { return isReady; }), take(1));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} name\r\n     * @param {?} value\r\n     * @param {?} ignore_illegals\r\n     * @param {?=} continuation\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype.highlight = function (name, value, ignore_illegals, continuation) {\r\n        if (typeof hljs !== 'undefined') {\r\n            return hljs.highlight(name, value, ignore_illegals, continuation);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} languageSubset\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype.highlightAuto = function (value, languageSubset) {\r\n        if (typeof hljs !== 'undefined') {\r\n            return hljs.highlightAuto(value, languageSubset);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype.fixMarkup = function (value) {\r\n        if (typeof hljs !== 'undefined') {\r\n            return hljs.fixMarkup(value);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} block\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype.highlightBlock = function (block) {\r\n        if (typeof hljs !== 'undefined') {\r\n            hljs.highlightBlock(block);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} options\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype.configure = function (options) {\r\n        if (typeof hljs !== 'undefined') {\r\n            hljs.configure(this.options.config);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype.initHighlighting = function () {\r\n        if (typeof hljs !== 'undefined') {\r\n            hljs.initHighlighting();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype.initHighlightingOnLoad = function () {\r\n        if (typeof hljs !== 'undefined') {\r\n            hljs.initHighlightingOnLoad();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} name\r\n     * @param {?} language\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype.registerLanguage = function (name, language) {\r\n        if (typeof hljs !== 'undefined') {\r\n            hljs.registerLanguage(name, language);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype.listLanguages = function () {\r\n        if (typeof hljs !== 'undefined') {\r\n            return hljs.listLanguages();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype.getLanguage = function (name) {\r\n        if (typeof hljs !== 'undefined') {\r\n            return hljs.getLanguage(name);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype._loadScript = function () {\r\n        var _this = this;\r\n        var /** @type {?} */ script = document.createElement('script');\r\n        script.async = true;\r\n        script.type = 'text/javascript';\r\n        script.onload = function () {\r\n            hljs.configure(_this.options.config);\r\n            _this._isReady$.next(true);\r\n        };\r\n        script.src = this.options.path + \"/highlight.pack.js\";\r\n        document.head.appendChild(script);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    HighlightJS.prototype._loadTheme = function () {\r\n        var /** @type {?} */ style = document.createElement('link');\r\n        style.rel = 'stylesheet';\r\n        style.type = 'text/css';\r\n        style.href = this.options.path + \"/styles/\" + this.options.theme + \".css\";\r\n        document.head.appendChild(style);\r\n    };\r\n    return HighlightJS;\r\n}());\r\nHighlightJS.decorators = [\r\n    { type: Injectable },\r\n];\r\n/** @nocollapse */\r\nHighlightJS.ctorParameters = function () { return [\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [OPTIONS,] },] },\r\n]; };\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * There are 2 ways to higlight a code\r\n *  1 - using the [code] input (default) <code highlight [code]=\"yourCode\"></code>\r\n *  2 - using element text content <code> {{yourCode}} </code>\r\n */\r\nvar HighlightDirective = /** @class */ (function () {\r\n    /**\r\n     * @param {?} el\r\n     * @param {?} renderer\r\n     * @param {?} hljs\r\n     */\r\n    function HighlightDirective(el, renderer, hljs) {\r\n        this.renderer = renderer;\r\n        this.hljs = hljs;\r\n        this.highlighted = new EventEmitter();\r\n        this.el = el.nativeElement;\r\n    }\r\n    Object.defineProperty(HighlightDirective.prototype, \"setCode\", {\r\n        /**\r\n         * @param {?} code\r\n         * @return {?}\r\n         */\r\n        set: function (code) {\r\n            var _this = this;\r\n            this.code = code;\r\n            this.hljs.isReady.subscribe(function () { return _this.highlightElement(_this.el, code); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    HighlightDirective.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        /** Acitvate MutationObserver if `auto` option is true and `[code]` input is not used\r\n             * This will highlight using the text content */\r\n        if (!this.code && this.hljs.options.auto) {\r\n            this.hljs.isReady.subscribe(function () {\r\n                _this.highlightTextContent();\r\n                /** Highlight when text content changes */\r\n                _this.domObs = new MutationObserver(function () { return _this.highlightTextContent(); });\r\n                _this.domObs.observe(_this.el, { childList: true, subtree: true });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Highlight using element text content\r\n     * @return {?}\r\n     */\r\n    HighlightDirective.prototype.highlightTextContent = function () {\r\n        if (!this.highlight) {\r\n            if (this.el.tagName.toLowerCase() === 'code') {\r\n                this.highlightElement(this.el, this.el.innerText.trim());\r\n            }\r\n            else {\r\n                console.warn(\"[HighlightDirective]: Use 'highlight' on <code> element only\");\r\n            }\r\n        }\r\n        else if (this.highlight === 'all') {\r\n            this.highlightChildren(this.el, 'pre code');\r\n        }\r\n        else {\r\n            this.highlightChildren(this.el, this.highlight);\r\n        }\r\n    };\r\n    /**\r\n     * Highlight a code block\r\n     * @param {?} el\r\n     * @param {?} code\r\n     * @return {?}\r\n     */\r\n    HighlightDirective.prototype.highlightElement = function (el, code) {\r\n        var /** @type {?} */ res = this.hljs.highlightAuto(code, this.language);\r\n        if (res.value !== el.innerHTML) {\r\n            this.renderer.addClass(el, 'hljs');\r\n            this.renderer.setProperty(el, 'innerHTML', res.value);\r\n            this.highlighted.emit(res);\r\n        }\r\n    };\r\n    /**\r\n     * Highlight multiple code blocks\r\n     * @param {?} el\r\n     * @param {?} selector\r\n     * @return {?}\r\n     */\r\n    HighlightDirective.prototype.highlightChildren = function (el, selector) {\r\n        var _this = this;\r\n        var /** @type {?} */ codeElements = el.querySelectorAll(selector);\r\n        /** highlight children with the same selector */\r\n        from(codeElements).pipe(filter(function (code) { return code.childNodes.length === 1 && code.childNodes[0].nodeName === '#text'; }), map(function (codeElement) { return _this.highlightElement(codeElement, codeElement.innerText.trim()); }), take(1)).subscribe();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    HighlightDirective.prototype.ngOnDestroy = function () {\r\n        /** Disconnect MutationObserver */\r\n        if (!this.code && this.hljs.options.auto) {\r\n            this.domObs.disconnect();\r\n        }\r\n    };\r\n    return HighlightDirective;\r\n}());\r\nHighlightDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[highlight]'\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nHighlightDirective.ctorParameters = function () { return [\r\n    { type: ElementRef, },\r\n    { type: Renderer2, },\r\n    { type: HighlightJS, },\r\n]; };\r\nHighlightDirective.propDecorators = {\r\n    \"highlight\": [{ type: Input },],\r\n    \"language\": [{ type: Input },],\r\n    \"setCode\": [{ type: Input, args: ['code',] },],\r\n    \"highlighted\": [{ type: Output },],\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * @param {?} options\r\n * @return {?}\r\n */\r\nfunction HighlightFactory(options) {\r\n    return new HighlightJS(options);\r\n}\r\nvar HighlightModule = /** @class */ (function () {\r\n    function HighlightModule() {\r\n    }\r\n    /**\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    HighlightModule.forRoot = function (options) {\r\n        return {\r\n            ngModule: HighlightModule,\r\n            providers: [\r\n                { provide: OPTIONS, useValue: options },\r\n                {\r\n                    provide: HighlightJS,\r\n                    useFactory: HighlightFactory,\r\n                    deps: [OPTIONS]\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    return HighlightModule;\r\n}());\r\nHighlightModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                declarations: [HighlightDirective],\r\n                exports: [HighlightDirective]\r\n            },] },\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\n\nexport { HighlightModule, HighlightJS, HighlightDirective, HighlightFactory as ɵa, OPTIONS as ɵb };\n//# sourceMappingURL=ngx-highlightjs.js.map\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\n\nimport { SourceDisplayComponent } from './source-display/source-display.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HighlightModule.forRoot({ theme: 'agate'})\n  ],\n  declarations: [\n    SourceDisplayComponent\n  ],\n  exports: [\n    SourceDisplayComponent\n  ]\n})\nexport class SharedModule { }\n","module.exports = \"<ul class=\\\"nav nav-tabs\\\" [id]=\\\"idTab\\\" role=\\\"tablist\\\">\\n  <li *ngIf=\\\"html\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#{{idTabHtml}}\\\" role=\\\"tab\\\" [attr.aria-controls]=\\\"idTabHtml\\\" aria-selected=\\\"true\\\">HTML</a></li>\\n  <li *ngIf=\\\"typescript\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#{{idTypescript}}\\\" role=\\\"tab\\\" [attr.aria-controls]=\\\"idTypescript\\\" aria-selected=\\\"false\\\">TS</a></li>\\n  <li *ngIf=\\\"css\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#{{idTabCss}}\\\" role=\\\"tab\\\" [attr.aria-controls]=\\\"idTabCss\\\" aria-selected=\\\"false\\\">CSS</a></li>\\n</ul>\\n<div class=\\\"tab-content\\\" [id]=\\\"idTabContent\\\">\\n  <div *ngIf=\\\"html\\\" class=\\\"tab-pane p-3 fade show active\\\" [id]=\\\"idTabHtml\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"html-tab\\\">\\n    <pre><code highlight [language]=\\\"['html']\\\" [textContent]=\\\"html\\\"></code></pre>\\n  </div>\\n  <div *ngIf=\\\"typescript\\\" class=\\\"tab-pane p-3 fade\\\" [id]=\\\"idTypescript\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"typescript-tab\\\">\\n    <pre><code highlight [language]=\\\"['typescript']\\\" [textContent]=\\\"typescript\\\"></code></pre>\\n  </div>\\n  <div *ngIf=\\\"css\\\" class=\\\"tab-pane p-3 fade\\\" [id]=\\\"idTabCss\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"css-tab\\\">\\n    <pre><code highlight [language]=\\\"['scss']\\\" [textContent]=\\\"css\\\"></code></pre>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\n\nlet tabIdentifier = 0;\nlet tabContentIdentifier = 0;\nlet tabHtmlIdentifier = 0;\nlet tabTypescriptIdentifier = 0;\nlet tabCssIdentifier = 0;\n\n@Component({\n  selector: 'it-source-display',\n  templateUrl: './source-display.component.html',\n  styleUrls: ['./source-display.component.scss']\n})\nexport class SourceDisplayComponent implements OnInit {\n\n  private idTab = `source-display-tab-${tabIdentifier++}`;\n  private idTabContent = `source-display-tab-content-${tabContentIdentifier++}`;\n  private idTabHtml = `tab-html-${tabHtmlIdentifier++}`;\n  private idTypescript = `tab-typescript-${tabTypescriptIdentifier++}`;\n  private idTabCss = `tab-css-${tabCssIdentifier++}`;\n\n  @Input() html: string;\n  @Input() typescript: string;\n  @Input() css: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.html = this.html.replace(/\\/{\\/{/g, '{{');\n    this.html = this.html.replace(/\\/}\\/}/g, '}}');\n\n    this.typescript = this.typescript.replace(/\\/{\\/{/g, '{{');\n    this.typescript = this.typescript.replace(/\\/}\\/}/g, '}}');\n\n    this.css = this.css.replace(/\\/{\\/{/g, '{{');\n    this.css = this.css.replace(/\\/}\\/}/g, '}}');\n  }\n}\n"],"sourceRoot":""}